name: Release
on:
  push:
    tags:
      - "v*"

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get current branch
        id: check_branch
        run: |
          raw=$(git branch -r --contains ${{ github.ref }})
          branch=${raw##*/}
          echo "::set-output name=branch::$branch"
          echo "Current Branch is $branch."
    outputs:
      branch: ${{ steps.check_branch.outputs.branch }}

  build:
    runs-on: ubuntu-latest
    needs: check
    if: startsWith( github.ref, 'refs/tags/') && needs.check.outputs.branch == 'main'
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 14.x

      - run: npm install

      - name: Build vsix
        run: npx vsce package ${{ github.ref_name }} --no-git-tag-version -o demo-vscode-${{ github.ref_name }}.vsix

      - uses: actions/upload-artifact@v3
        with:
          path: "*.vsix"

  release:
    runs-on: ubuntu-latest
    needs: [check, build]
    if: success() && startsWith( github.ref, 'refs/tags/') && needs.check.outputs.branch == 'main'
    steps:
      - uses: actions/download-artifact@v3

      # - name: Release to GitHub
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: ./artifact/demo-vscode-${{ github.ref_name }}.vsix
      #     generate_release_notes: true

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Asset to GitHub Release
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: demo-vscode-${{ github.ref_name }}.vsix
          asset_path: ./artifact/demo-vscode-${{ github.ref_name }}.vsix
          asset_content_type: application/octet-stream

      - name: Release to VSCode Marketplace
        run: npx vsce publish --packagePath $(find . -iname *.vsix)
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Release to Open VSX
        run: npx ovsx publish ./artifact/demo-vscode-${{ github.ref_name }}.vsix
        continue-on-error: true
        env:
          OVSX_PAT: ${{ secrets.OVSX_PAT}}